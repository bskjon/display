# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Dockerize Display - Backend + Web

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  gradle-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1

    - name: Execute Gradle
      working-directory: ./Backend
      run: ./gradlew build
      
    - name: Upload Backend Build Artifact
      uses: actions/upload-artifact@v3.1.1
      with: 
        name: backend
        path: ./Backend/build/libs/backend.jar
        if-no-files-found: error
        
  ng-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Web
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 16.x
                    
      - name: Setup Angular Dependencies
        run: |
          npm install -g @angular/cli
          npm install

      - name: Execute With Ngssc
        run: |
          ng run display:ngsscbuild:production
      
      - name: Run LS
        run: |
          ls -la ./
          ls -la ./dist
          ls -la ./dist/display
        shell: bash
      
      - name: Run Zip
        working-directory: ./Web
        run: |
          zip -r web-test.zip ./dist/display
        shell: bash
        
      - name: Upload Test Web Zip Build
        uses: actions/upload-artifact@v3.1.1
        with:
          name: web
          path: ./web-test.zip
      
      - name: Upload Web Build
        uses: actions/upload-artifact@v3.1.1
        with:
          name: web
          path: ./Web/dist/display/
          if-no-files-found: error
          
  dockerize:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [gradle-build, ng-build]
    
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
    
      - name: Downloading Backend
        uses: actions/download-artifact@v3.0.1
        with:
          name: backend
          path: ./
          
      - name: Downloading Web
        uses: actions/download-artifact@v3.0.1
        with:
          name: web
          path: ./dist/display/
      
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.2.1
        
      - name: Build the Docker image
        run: docker buildx build --push --platform=linux/amd64,linux/arm64,linux/arm/v7 -t bskjon/display:latest .
     
    
